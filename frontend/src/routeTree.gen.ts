/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as TrackersImport } from './routes/trackers'
import { Route as SettingsImport } from './routes/settings'
import { Route as NewActivityImport } from './routes/new/newActivity'
import { Route as NewLogImport } from './routes/new/newLog'
import { Route as NewUserImport } from './routes/new/newUser'
import { Route as DailyReportImport } from './routes/reports/dailyReport'
import { Route as WeeklyReportImport } from './routes/reports/weeklyReport'
import { Route as MonthlyReportImport } from './routes/reports/monthlyReport'
import { Route as TPTImport } from './routes/reports/tpt'
import { Route as TWTImport } from './routes/reports/twt'
import { Route as TTOTImport } from './routes/reports/ttot'
import { Route as ProfileImport } from './routes/user/profile'
// import { Route as AssignUserImport } from './routes/user/assignUser'
import { Route as LoginImport } from './routes/user/login'
import { Route as SignupImport } from './routes/user/signup'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TrackersRoute = TrackersImport.update({
  path: '/trackers',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRoute = SettingsImport.update({
    path: '/settings',
    getParentRoute: () => rootRoute,
} as any);

const NewActivityRoute = NewActivityImport.update({
  path: '/new/activity',
  getParentRoute: () => rootRoute,
} as any)

const NewLogRoute = NewLogImport.update({
  path: '/new/log',
  getParentRoute: () => rootRoute,
} as any)

const NewUserRoute = NewUserImport.update({
  path: '/new/user',
  getParentRoute: () => rootRoute,
} as any)

const DailyReportRoute = DailyReportImport.update({
  path: '/reports/daily',
  getParentRoute: () => rootRoute,
} as any)

const WeeklyReportRoute = WeeklyReportImport.update({
  path: '/reports/weekly',
  getParentRoute: () => rootRoute,
} as any)

const MonthlyReportRoute = MonthlyReportImport.update({
  path: '/reports/monthly',
  getParentRoute: () => rootRoute,
} as any)

const TPTRoute = TPTImport.update({
  path: '/reports/tpt',
  getParentRoute: () => rootRoute,
} as any)

const TWTRoute = TWTImport.update({
  path: '/reports/twt',
  getParentRoute: () => rootRoute,
} as any)

const TTOTRoute = TTOTImport.update({
  path: '/reports/ttot',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
    path:'/user/profile',
    getParentRoute: () => rootRoute,
} as any)

// const AssignUserRoute = AssignUserImport.update({
//   path: '/user/assign',
//   getParentRoute: () => rootRoute,
// } as any)

const LoginRoute = LoginImport.update({
  path: '/user/login',
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  path: '/user/signup',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/trackers': {
      id: '/trackers'
      path: '/trackers'
      fullPath: '/trackers'
      preLoaderRoute: typeof TrackersImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
        id: '/settings'
        path: '/settings'
        fullPath: '/settings'
        preLoaderRoute: typeof TrackersImport
        parentRoute: typeof rootRoute
    }
    '/new/activity': {
      id: '/new/activity'
      path: '/new/activity'
      fullPath: '/new/activity'
      preLoaderRoute: typeof NewActivityImport
      parentRoute: typeof rootRoute
    }
    '/new/log': {
      id: '/new/log'
      path: '/new/log'
      fullPath: '/new/log'
      preLoaderRoute: typeof NewLogImport
      parentRoute: typeof rootRoute
    }
    '/new/user': {
      id: '/new/user'
      path: '/new/user'
      fullPath: '/new/user'
      preLoaderRoute: typeof NewUserImport
      parentRoute: typeof rootRoute
    }
    '/reports/daily': {
      id: '/reports/daily'
      path: '/reports/daily'
      fullPath: '/reports/daily'
      preLoaderRoute: typeof DailyReportImport
      parentRoute: typeof rootRoute
    }
    '/reports/weekly': {
      id: '/reports/weekly'
      path: '/reports/weekly'
      fullPath: '/reports/weekly'
      preLoaderRoute: typeof WeeklyReportImport
      parentRoute: typeof rootRoute
    }
    '/reports/monthly': {
      id: '/reports/monthly'
      path: '/reports/monthly'
      fullPath: '/reports/monthly'
      preLoaderRoute: typeof MonthlyReportImport
      parentRoute: typeof rootRoute
    }
    '/reports/tpt': {
      id: '/reports/tpt'
      path: '/reports/tpt'
      fullPath: '/reports/tpt'
      preLoaderRoute: typeof TPTRoute
      parentRoute: typeof rootRoute
    }
    '/reports/twt': {
      id: '/reports/twt'
      path: '/reports/twt'
      fullPath: '/reports/twt'
      preLoaderRoute: typeof TWTRoute
      parentRoute: typeof rootRoute
    }
    '/reports/ttot': {
      id: '/reports/ttot'
      path: '/reports/ttot'
      fullPath: '/reports/ttot'
      preLoaderRoute: typeof TTOTRoute
      parentRoute: typeof rootRoute
    }
    '/user/profile': {
        id: '/user/profile'
        path: '/user/profile'
        fullPath: '/user/profile'
        preLoaderRoute: typeof ProfileRoute
        parentRoute: typeof rootRoute
    }
    // '/user/assign': {
    //   id: '/user/assign'
    //   path: '/user/assign'
    //   fullPath: '/user/assign'
    //   preLoaderRoute: typeof AssignUserImport
    //   parentRoute: typeof rootRoute
    // }
    '/user/login': {
      id: '/user/login'
      path: '/user/login'
      fullPath: '/user/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/user/signup': {
      id: '/user/signup'
      path: '/user/signup'
      fullPath: '/user/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/trackers': typeof TrackersRoute
  '.settings': typeof SettingsRoute
  '/new/activity': typeof NewActivityRoute
  '/new/log': typeof NewLogRoute
  '/new/user': typeof NewUserRoute
  '/reports/daily': typeof DailyReportRoute
  '/reports/weekly': typeof WeeklyReportRoute
  '/reports/monthly': typeof MonthlyReportRoute
  '/reports/tpt': typeof TPTRoute
  '/reports/twt': typeof TWTRoute
  '/reports/ttot': typeof TTOTRoute
  '/user/profile': typeof ProfileRoute
  '/user/assign': typeof AssignUserRoute
  '/user/login': typeof LoginRoute
  '/user/signup': typeof SignupRoute
}

export const routeTree = rootRoute
  ._addFileChildren({
    IndexRoute,
    TrackersRoute,
    SettingsRoute,
    NewActivityRoute,
    NewLogRoute,
    NewUserRoute,
    DailyReportRoute,
    WeeklyReportRoute,
    MonthlyReportRoute,
    TPTRoute,
    TWTRoute,
    TTOTRoute,
    ProfileRoute,
    // AssignUserRoute,
    LoginRoute,
    SignupRoute
  })
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */
